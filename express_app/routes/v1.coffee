express = require('express')
router = express.Router()

request = require 'request'
Promise = require 'promise'
cheerio = require 'cheerio'

### GET home page. ###

router.post '/', (req, res, next) ->
  jar = request.jar();
  request = request.defaults {
    "jar": jar,
    headers: {
      "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.80 Safari/537.36"
    }
  }
  login = (user_id, user_passwd, callback)->
    task1 = ->
      url = 'https://acpt.jsysneo.fukuoka-u.ac.jp/ActiveCampus/index.html'
      new Promise (resolve, reject)->
        request { "url": url }, (error, response, body)->
          if error?
            reject(error)
          else
            console.log("get:task1 "+url)
            resolve(response);

    task2 = (res)->
      url = 'https://slboam1.aps.fukuoka-u.ac.jp/openam/UI/Login'
      new Promise (resolve, reject)->
        $                    = cheerio.load res.body
        goto                 = $('input[name="goto"]').attr('value')
        SunQueryParamsString = $('input[name="SunQueryParamsString"]').attr('value')
        encoded              = $('input[name="encoded"]').attr('value')
        gx_charset           = $('input[name="gx_charset"]').attr('value')

        request.post {
          "url": url,
          form: {
            IDToken0: "",
            IDToken1: user_id,
            IDToken2: user_passwd,
            "goto": goto,
            "SunQueryParamsString": SunQueryParamsString,
            "encoded": encoded,
            "gx_charset": gx_charset
          }
        }, (error, response, body)->
          if error?
            reject(error);
          else
            console.log("post:task2 #{url}");
            resolve(response);

    task3 = (res)->
      url = res.headers["location"]
      new Promise (resolve, reject)->
        request {"url": url}, (error, response, body)->
          if error?
            reject(error)
          else
            console.log("get:task3 #{url}")
            resolve(response)

    task4 = (res)->
      url = "https://acpt.jsysneo.fukuoka-u.ac.jp/Shibboleth.sso/SAML2/POST"
      $ = cheerio.load(res.body)
      new Promise (resolve, reject)->

        RelayState   = $('input[name="RelayState"]').attr('value')
        SAMLResponse = $('input[name="SAMLResponse"]').attr('value')

        request.post {
          "url": url,
          form: {
            "RelayState": RelayState,
            "SAMLResponse": SAMLResponse
          }
        }, (error, response, body)->
          if error?
            reject(error);
          else
            console.log("post:task4 "+url);
            resolve(response);

    task5 = (res)->
      url = res.headers["location"]
      return new Promise (resolve, reject)->
        request {"url": url}, (error, response, body)->
          if error?
            reject(error);
          else
            console.log("get:task5 "+url);
            resolve(response);

    debug = (err)->
      console.log("Error: #{err}\n*** Dose't match ID or Password! ***")
      process.exit(-1)

    task1()
      .then(task2, debug)
      .then(task3, debug)
      .then(task4, debug)
      .then(task5, debug)
      .nodeify(callback)

  MyPage_html = ""
  Login_html = ""
  getPortletInformation = (callback)->
    promise1 = new Promise (resolve, reject)->
      url = "https://acpt.jsysneo.fukuoka-u.ac.jp/ActiveCampus/module/Login.php"
      request {"url": url}, (error, response, body)->
        if error?
          reject(error);
        else
          console.log("get:getPortletInformation #{url}")
          # console.log(body)
          Login_html = body;
          resolve(response)
    promise2 = new Promise (resolve, reject)->
      url = "https://acpt.jsysneo.fukuoka-u.ac.jp/ActiveCampus/module/MyPage.php"
      request {"url": url}, (error, response, body)->
        if error?
          reject(error);
        else
          console.log("get:getPortletInformation #{url}")
          # console.log(body)
          MyPage_html = body;
          resolve(response)
    Promise.all [promise1, promise2]
      .nodeify(callback)

  id     = req.body.id
  passwd = req.body.passwd
  try
    login "#{id}", "#{passwd}", ->
      getPortletInformation ->
        res.send(MyPage_html)
  catch
    res.send("Error!!!")
  return

module.exports = router

# ---
# generated by js2coffee 2.1.0
